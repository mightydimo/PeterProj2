{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport { SafeAreaView } from \"react-native-safe-area-context\";\nimport Settings from \"../constants/Settings\";\nimport { TextParagraph, TextH1, TextH2, TextH3, TextListItem } from \"../components/StyledText\";\nimport Styles from \"../styles/MainStyle\";\nimport Colours from \"../constants/Colours\";\nimport { MyButton } from \"../components/MyButton\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function HelpScreen(props) {\n  var _React$useState = React.useState(Settings.fontSizeModifier),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    fontSizeModifier = _React$useState2[0],\n    setFontSizeModifier = _React$useState2[1];\n  function changeFontSize(sizeModifier) {\n    Settings.fontSizeModifier += sizeModifier;\n    setFontSizeModifier(Settings.fontSizeModifier);\n  }\n  var chance = function chance() {\n    return;\n  };\n  return _jsx(SafeAreaView, {\n    style: Styles.safeAreaView,\n    children: _jsx(ScrollView, {\n      style: Styles.container,\n      contentContainerStyle: Styles.contentContainer,\n      children: _jsxs(View, {\n        children: [_jsx(TextH1, {\n          style: {\n            marginTop: 0\n          },\n          children: \"Help topics\"\n        }), _jsx(TextH3, {\n          children: \"Font Size\"\n        }), _jsxs(View, {\n          style: Styles.helpButtonContainer,\n          children: [_jsx(MyButton, {\n            text: \"- Smaller\",\n            type: \"default\",\n            size: \"medium\",\n            onPress: function onPress() {\n              changeFontSize(-0.1);\n            },\n            buttonStyle: Styles.helpButton\n          }), _jsx(MyButton, {\n            text: \"+ bigger\",\n            type: \"default\",\n            size: \"medium\",\n            onPress: function onPress() {\n              changeFontSize(+0.1);\n            },\n            buttonStyle: Styles.helpButton,\n            MyButton: true\n          })]\n        }), _jsx(TextH2, {\n          children: \"Sample content\"\n        }), _jsx(TextParagraph, {\n          children: \"Here is some sample content for a help topic (or just any set of static text for the screen).\"\n        }), _jsx(TextH2, {\n          children: \"Custom components\"\n        }), _jsx(TextParagraph, {\n          children: \"You can add all of your own content and structure for these screens, making use of the customised text components from components/StyledText.\"\n        }), _jsx(TextH3, {\n          children: \"Custom text components:\"\n        }), _jsx(TextListItem, {\n          children: \"MonoText - Monospaced font (Space Mono)\"\n        }), _jsx(TextListItem, {\n          children: \"TextH1 - heading 1\"\n        }), _jsx(TextListItem, {\n          children: \"TextH2 - heading 2\"\n        }), _jsx(TextListItem, {\n          children: \"TextH3 - heading 3\"\n        }), _jsx(TextListItem, {\n          children: \"TextParagraph - paragraph\"\n        }), _jsx(TextListItem, {\n          children: \"TextListItem - bullet list item\"\n        }), _jsx(TextListItem, {\n          children: \"TextLabel - form label (inline with input)\"\n        }), _jsx(TextH2, {\n          children: \"Wanna go home?\"\n        }), _jsx(Pressable, {\n          onPress: function onPress() {\n            return props.navigation.replace('Root');\n          },\n          children: _jsx(TextParagraph, {\n            style: {\n              marginVertical: 10,\n              color: Colours.tabLabelSelected\n            },\n            children: \"Click here to go home...\"\n          })\n        })]\n      })\n    })\n  });\n}","map":{"version":3,"names":["React","View","ScrollView","Pressable","SafeAreaView","Settings","TextParagraph","TextH1","TextH2","TextH3","TextListItem","Styles","Colours","MyButton","jsx","_jsx","jsxs","_jsxs","HelpScreen","props","_React$useState","useState","fontSizeModifier","_React$useState2","_slicedToArray","setFontSizeModifier","changeFontSize","sizeModifier","chance","style","safeAreaView","children","container","contentContainerStyle","contentContainer","marginTop","helpButtonContainer","text","type","size","onPress","buttonStyle","helpButton","navigation","replace","marginVertical","color","tabLabelSelected"],"sources":["C:/project/peterproj2/screens/HelpScreen.js"],"sourcesContent":["import * as React from 'react';\nimport { View, ScrollView, Pressable } from 'react-native';\nimport { SafeAreaView } from \"react-native-safe-area-context\";\n\n// Import helper code\nimport Settings from '../constants/Settings';\n\n// Import styling and components\nimport { TextParagraph, TextH1, TextH2, TextH3, TextListItem } from \"../components/StyledText\";\nimport Styles from \"../styles/MainStyle\";\nimport Colours from '../constants/Colours';\nimport { MyButton } from '../components/MyButton';\n\n\n\nexport default function HelpScreen(props) {\n\n  const [fontSizeModifier, setFontSizeModifier]=React.useState(Settings.fontSizeModifier);\n\nfunction changeFontSize(sizeModifier) {\n  Settings.fontSizeModifier += sizeModifier;\n  setFontSizeModifier(Settings.fontSizeModifier);\n\n}\nconst chance = ()=>{ return}\n  return (\n    <SafeAreaView style={Styles.safeAreaView}>\n      <ScrollView style={Styles.container} contentContainerStyle={Styles.contentContainer}>\n\n        <View>\n          \n          <TextH1 style={{marginTop:0}}>Help topics</TextH1>\n\n<TextH3>Font Size</TextH3>\n\n<View style={Styles.helpButtonContainer}>\n  <MyButton\n  text=\"- Smaller\"\n  type=\"default\"\n  size=\"medium\"\n  onPress={()=>{changeFontSize(-0.1)}}\n  buttonStyle={Styles.helpButton}\n  />\n  <MyButton\n  text=\"+ bigger\"\n  type=\"default\"\n  size=\"medium\"\n  onPress={()=>{changeFontSize(+0.1)}}\n  buttonStyle={Styles.helpButton}\n  MyButton/>\n</View>\n\n          <TextH2>Sample content</TextH2>\n\n          <TextParagraph>Here is some sample content for a help topic (or just any set of static text for the screen).</TextParagraph>\n\n          <TextH2>Custom components</TextH2>\n\n          <TextParagraph>You can add all of your own content and structure for these screens, making use of the customised text components from components/StyledText.</TextParagraph>\n\n          <TextH3>Custom text components:</TextH3>\n\n          <TextListItem>MonoText - Monospaced font (Space Mono)</TextListItem>\n          <TextListItem>TextH1 - heading 1</TextListItem>\n          <TextListItem>TextH2 - heading 2</TextListItem>\n          <TextListItem>TextH3 - heading 3</TextListItem>\n          <TextListItem>TextParagraph - paragraph</TextListItem>\n          <TextListItem>TextListItem - bullet list item</TextListItem>\n          <TextListItem>TextLabel - form label (inline with input)</TextListItem>\n\n          <TextH2>Wanna go home?</TextH2>\n\n          <Pressable onPress={() => props.navigation.replace('Root')}>\n            <TextParagraph style={{marginVertical: 10, color: Colours.tabLabelSelected}}>Click here to go home...</TextParagraph>\n          </Pressable>\n\n        </View>\n      </ScrollView>\n    </SafeAreaView>\n  );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}